'''
This program reads a dataset and the resulting probabilites generated by SqueezeNet for breast cancer detection and creates a joint result file.
Input: 
    - a single text file containing the dataset and the ground thruth for breast cancer detection (one image per line).
    - a single file containing the resulting probabilites generated by SqueezeNet for breast cancer detection (one image per line).
Output: 
    - a single text file combining the two input files.
'''

import sys
import argparse


def join_file_lines(infile1, infile2, outfile=None, join_char=','):
    print('\nProcessing files:\n\t\'{}\'\n\t\'{}\''.format(infile1.name, infile2.name))
    i1_lines = infile1.readlines()
    i2_lines = infile2.readlines()
    if len(i1_lines) != len(i2_lines):
        print('\nError: \'{}\' has {} lines, but \'{}\' has {} lines\n'.format(infile1.name, len(i1_lines), infile2.name, len(i2_lines)))
        exit()
    print('{} records read'.format(len(i1_lines)))
    
    joint_lines = []
    for i in range(len(i1_lines)):
        i1_line = i1_lines[i]
        i2_line = i2_lines[i]
        if i1_line[-1] == '\n':
            line = i1_line[:-1] + join_char + i2_line
        else:
            line = i1_line + join_char + i2_line
        joint_lines.append(line)
        if outfile != None:
            outfile.write(line)
    
    if (outfile != None):
        print('{} records written to \'{}\'\n'.format(len(i1_lines), outfile.name))
        outfile.close()
    infile1.close()
    infile2.close()
    return joint_lines


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='This program reads a dataset and the resulting probabilites generated by SqueezeNet '
        'for breast cancer detection and creates a joint result file', formatter_class=argparse.RawTextHelpFormatter)
    parser.add_argument('datasetfile', help='input dataset file containing the ground truth', nargs='?', type=argparse.FileType('r'))
    parser.add_argument('probabilitiesfile', help='input file containing the probabilites generated by SqueezeNet', nargs='?', type=argparse.FileType('r'))
    parser.add_argument('-o', '--outfile', help='joint result output file', nargs='?', type=argparse.FileType('w'), default=None)
    args = parser.parse_args()

    lines = join_file_lines(args.datasetfile, args.probabilitiesfile, outfile=args.outfile, join_char=',')
